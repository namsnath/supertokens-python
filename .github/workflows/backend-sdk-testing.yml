name: "Backend SDK Tests"

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  workflow_call:
    inputs:
      ref:
        description: The git ref to run tests on
        type: string
        required: true

jobs:
  define-versions:
    runs-on: ubuntu-latest
    outputs:
      fdiVersions: ${{ steps.versions.outputs.fdiVersions }}
      cdiVersions: ${{ steps.versions.outputs.cdiVersions }}
      pyVersions: '["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]'
      nodeVersions: '["20"]'
    steps:
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v4

      - if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - uses: supertokens/get-supported-versions-action@main
        id: versions
        with:
          has-fdi: true
          has-cdi: true

  test:
    runs-on: ubuntu-latest
    needs: define-versions

    strategy:
      fail-fast: false
      matrix:
        cdi-version: ${{ fromJSON(needs.define-versions.outputs.cdiVersions) }}
        fdi-version: ${{ fromJSON(needs.define-versions.outputs.fdiVersions) }}
        py-version: ${{ fromJson(needs.define-versions.outputs.pyVersions) }}
        node-version: ${{ fromJson(needs.define-versions.outputs.nodeVersions) }}

    env:
      API_PORT: 3030
      SUPERTOKENS_CORE_PORT: 3567
      SUPERTOKENS_CORE_HOST: localhost

    steps:
      - if: github.event_name == 'pull_request'
        uses: actions/checkout@v4
        with:
          # Checking out to a custom path since the test repo will also be cloned
          path: supertokens-python

      - if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          # Checking out to a custom path since the test repo will also be cloned
          path: supertokens-python

      - uses: supertokens/get-versions-action@main
        id: versions
        with:
          driver-name: python
          cdi-version: ${{ matrix.cdi-version }}
          fdi-version: ${{ matrix.fdi-version }}
        env:
          SUPERTOKENS_API_KEY: ${{ secrets.SUPERTOKENS_API_KEY }}

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Create virtual environment and install dependencies
        working-directory: supertokens-python
        # Upgrade `pip` and `setuptools` to have the latest versions before further installs
        run: |
          python3 -m venv venv
          source venv/bin/activate
          python3 -m pip install pip setuptools --upgrade
          make dev-install && rm -rf src

      - name: Start core and server
        working-directory: supertokens-python
        env:
          SUPERTOKENS_ENV: testing
          SUPERTOKENS_CORE_VERSION: ${{ steps.versions.outputs.coreVersionXy }}
        run: |
          source venv/bin/activate
          docker compose up --build --wait
          python3 tests/test-server/app.py &

      - uses: supertokens/backend-sdk-testing-action@main
        with:
          version: ${{ matrix.fdi-version }}
          check-name-suffix: '[CDI=${{ matrix.cdi-version }}][Core=${{ steps.versions.outputs.coreVersionXy }}][FDI=${{ matrix.fdi-version }}][Py=${{ matrix.py-version }}][Node=${{ matrix.node-version }}]'
          path: backend-sdk-testing
